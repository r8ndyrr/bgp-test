---
- name: "PLAY 1: manage BGP config"
  hosts: routers

  tasks:
    - name: "TASK 0: Check variables first"
      assert:
        that:
          - "bgp_neighbor1 is defined"
          - "bgp_neighbor2 is defined"
          # make sure they are valid IPs
          - "bgp_neighbor1 | ipv4 == bgp_neighbor1"
          - "bgp_neighbor2 | ipv4 == bgp_neighbor2"
        fail_msg: "Problem wih bgp_neighbors .... check vars"
        success_msg: "Okie Dokie mate!"

    - name: "TASK 1: Log into routers and apply config"
      ios_config:
        lines:
          - "interface loopback 0"
          - "ip address {{ loopback0 }} {{ loopback0_mask }}"
          - "router bgp {{ bgp_asn_1 }}"
          - "bgp router-id {{ loopback0 }}"
          - "neighbor {{ bgp_neighbor1 }} remote-as {{ bgp_neighbor1_remote_as }}"
          - "neighbor {{ bgp_neighbor2 }} remote-as {{ bgp_neighbor2_remote_as }}"

      register: bgp_updates

    - name: "TASK 2: Print changes if they occur"
      debug:
        var: bgp_updates.commands
      when: "bgp_updates.commands is defined"

- name: "PLAY 2: manage BGP config"
  hosts: servers

  tasks:
    - name: "TASK 0: Check variables first"
      assert:
       that:
         - "bgp_neighbor1 is defined"
         - "bgp_neighbor2 is defined"
         # make sure they are valid IPs
         - "bgp_neighbor1 | ipv4 == bgp_neighbor1"
         - "bgp_neighbor2 | ipv4 == bgp_neighbor2"
       fail_msg: "Problem wih bgp_neighbors .... check vars"
       success_msg: "Okie Dokie mate!"

    - name: "TASK 1: Log into router 2  and apply config"
      ios_config:
        lines:
          - "interface loopback 0"
          - "ip address {{ loopback0 }} {{ loopback0_mask }}"
          - "router bgp {{ bgp_asn_1 }}"
          - "bgp router-id {{ loopback0 }}"
          - "neighbor {{ bgp_neighbor1 }} remote-as {{ bgp_neighbor1_remote_as }}"
          - "neighbor {{ bgp_neighbor2 }} remote-as {{ bgp_neighbor2_remote_as }}"

      register: bgp_updates

    - name: "TASK 2: Print changes if they occur"
      debug:
        var: bgp_updates.commands
      when: "bgp_updates.commands is defined"

- name: "PLAY 3: manage BGP config"
  hosts: switches

  tasks:
    - name: "TASK 0: Check variables first"
      assert:
        that:
          - "bgp_neighbor1 is defined"
          - "bgp_neighbor2 is defined"
          # make sure they are valid IPs
          - "bgp_neighbor1 | ipv4 == bgp_neighbor1"
          - "bgp_neighbor2 | ipv4 == bgp_neighbor2"
        fail_msg: "Problem wih bgp_neighbors .... check vars"
        success_msg: "Okie Dokie mate!"

    - name: "TASK 1: Log into router 2  and apply config"
      ios_config:
        lines:
          - "interface loopback 0"
          - "ip address {{ loopback0 }} {{ loopback0_mask }}"
          - "router bgp {{ bgp_asn_1 }}"
          - "bgp router-id {{ loopback0 }}"
          - "neighbor {{ bgp_neighbor1 }} remote-as {{ bgp_neighbor1_remote_as }}"
          - "neighbor {{ bgp_neighbor2 }} remote-as {{ bgp_neighbor2_remote_as }}"

      register: bgp_updates

    - name: "TASK 2: Print changes if they occur"
      debug:
        var: bgp_updates.commands
      when: "bgp_updates.commands is defined"


#- name: Template
#  template:
#    src: test.j2
#    dest: test.txt
